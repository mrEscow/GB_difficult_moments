#pragma once
/*
* 	mr.Escow - Lesson-6
* * * * * * * * * * * * * * * */
#include "Header.h"
#include <mutex>
//-------------------------------------------------------------------------------------------
/*
	1.Создайте потокобезопасную оболочку для объекта cout. 
	Назовите ее pcout. 
	Необходимо, чтобы несколько потоков могли обращаться к pcout и информация выводилась в консоль. 
	Продемонстрируйте работу pcout.
*/
//-------------------------------------------------------------------------------------------
class Pcout : public std::ostringstream
{
public:
	Pcout() = default;

	~Pcout()
	{
		std::lock_guard<std::mutex> guard(_mutexPrint);
		std::cout << this->str();
	}

private:
	static std::mutex _mutexPrint;
};

std::mutex Pcout::_mutexPrint{};
//Pcout pcout;

//-------------------------------------------------------------------------------------------
/*
	2.Реализовать функцию, возвращающую i-ое простое число (например, миллионное простое число равно 15485863). 
	Вычисления реализовать во вторичном потоке. В консоли отображать прогресс вычисления. 
*/
//-------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------
/*
	3.Промоделировать следующую ситуацию. 
	Есть два человека (2 потока): хозяин и вор. 
	Хозяин приносит домой вещи (функция добавляющая случайное число в вектор с периодичностью 1 раз в секунду). 
	При этом у каждой вещи есть своя ценность. 
	Вор забирает вещи (функция, которая находит наибольшее число и удаляет из вектора с периодичностью 1 раз в 0.5 секунд), 
	каждый раз забирает вещь с наибольшей ценностью. 
*/
//-------------------------------------------------------------------------------------------
int Lesson6() {

	Pcout{} << "HI";
	std::cout << " ";
	Pcout{} << "World!";

	return 0;
}
//-------------------------------------------------------------------------------------------